// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://foleepziqgrdgkljedux.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZvbGVlcHppcWdyZGdrbGplZHV4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIwNzkxNTgsImV4cCI6MjA2NzY1NTE1OH0.XyTKj6ayTYWnoJRUrkKyuNlQSfE6PMGeBHDdafqMs9g";

// Validate environment variables
if (!SUPABASE_URL) {
  console.error('Missing SUPABASE_URL');
}

if (!SUPABASE_PUBLISHABLE_KEY) {
  console.error('Missing SUPABASE_PUBLISHABLE_KEY');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Detect if user came from email link (magic link, confirmation, etc.)
const isFromEmailLink = typeof window !== 'undefined' && 
  (window.location.hash.includes('access_token') || 
   window.location.hash.includes('refresh_token') ||
   window.location.search.includes('token_hash') ||
   window.location.search.includes('type=recovery') ||
   window.location.search.includes('type=email_change') ||
   window.location.search.includes('type=signup'));

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    persistSession: isFromEmailLink, // Only persist sessions from email links
    autoRefreshToken: isFromEmailLink, // Only auto-refresh for email link sessions
    detectSessionInUrl: true, // Always detect email URLs
    flowType: 'pkce'
  },
  global: {
    headers: {
      'X-Client-Info': 'bible-aura-web'
    }
  },
  db: {
    schema: 'public'
  },
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  }
});